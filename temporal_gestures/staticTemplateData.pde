class StaticTemplateData{
  
  float TEMPLATE_TIME_FLAG = -1.;
  StaticTemplateData(){}
  // apparently you can't have static classes in Java so this is psuedo static and will be implemented as a singleton
  
  ArrayList<Point> getSlowFastFastTemplatePoints(){
    ArrayList<Point> points = new ArrayList<Point>();
    points.add(new Point(255.00, 476.00, 0.00));
    points.add(new Point(250.00, 505.19, 0.09));
    points.add(new Point(275.14, 516.00, 0.13));
    points.add(new Point(305.40, 516.00, 0.16));
    points.add(new Point(335.05, 512.30, 0.19));
    points.add(new Point(358.30, 493.55, 0.23));
    points.add(new Point(375.67, 469.66, 0.27));
    points.add(new Point(378.00, 439.86, 0.30));
    points.add(new Point(364.90, 413.90, 0.34));
    points.add(new Point(339.58, 397.67, 0.36));
    points.add(new Point(312.72, 384.36, 0.38));
    points.add(new Point(284.95, 372.40, 0.39));
    points.add(new Point(255.96, 364.56, 0.43));
    points.add(new Point(225.78, 364.00, 0.47));
    points.add(new Point(198.33, 373.50, 0.52));
    points.add(new Point(177.42, 395.23, 0.53));
    points.add(new Point(163.96, 422.09, 0.56));
    points.add(new Point(157.00, 451.38, 0.58));
    points.add(new Point(157.00, 481.64, 0.61));
    points.add(new Point(161.53, 511.35, 0.62));
    points.add(new Point(174.73, 538.46, 0.64));
    points.add(new Point(192.61, 561.90, 0.66));
    points.add(new Point(217.34, 579.10, 0.67));
    points.add(new Point(246.93, 585.13, 0.69));
    points.add(new Point(277.12, 586.00, 0.70));
    points.add(new Point(307.38, 586.00, 0.71));
    points.add(new Point(337.63, 586.00, 0.72));
    points.add(new Point(367.85, 584.90, 0.72));
    points.add(new Point(397.78, 580.79, 0.73));
    points.add(new Point(427.02, 573.00, 0.73));
    points.add(new Point(455.94, 564.18, 0.74));
    points.add(new Point(484.16, 553.36, 0.75));
    points.add(new Point(510.67, 538.84, 0.76));
    points.add(new Point(535.73, 521.89, 0.76));
    points.add(new Point(558.23, 501.87, 0.77));
    points.add(new Point(575.82, 477.25, 0.77));
    points.add(new Point(590.08, 450.69, 0.78));
    points.add(new Point(601.59, 422.71, 0.79));
    points.add(new Point(612.61, 394.56, 0.79));
    points.add(new Point(620.80, 365.44, 0.81));
    points.add(new Point(628.83, 336.27, 0.81));
    points.add(new Point(636.39, 306.97, 0.82));
    points.add(new Point(644.75, 277.92, 0.82));
    points.add(new Point(654.45, 249.31, 0.82));
    points.add(new Point(669.36, 223.04, 0.84));
    points.add(new Point(692.01, 203.71, 0.85));
    points.add(new Point(712.44, 220.76, 0.87));
    points.add(new Point(721.83, 249.49, 0.89));
    points.add(new Point(729.71, 278.70, 0.89));
    points.add(new Point(737.34, 307.98, 0.89));
    points.add(new Point(744.70, 337.33, 0.90));
    points.add(new Point(751.93, 366.71, 0.91));
    points.add(new Point(759.33, 396.04, 0.91));
    points.add(new Point(767.12, 425.28, 0.92));
    points.add(new Point(775.21, 454.43, 0.92));
    points.add(new Point(782.77, 483.73, 0.92));
    points.add(new Point(790.00, 513.10, 0.93));
    points.add(new Point(796.52, 542.65, 0.93));
    points.add(new Point(803.45, 572.09, 0.94));
    points.add(new Point(811.44, 601.27, 0.94));
    points.add(new Point(820.39, 630.17, 0.95));
    points.add(new Point(828.03, 659.44, 0.96));
    points.add(new Point(836.79, 688.38, 0.97));
    points.add(new Point(844.00, 711.00, 1.00));

    return points;
  }
  
  ArrayList<Point> getFastFastSlowTemplatePoints(){
    ArrayList<Point> points = new ArrayList<Point>();
    points.add(new Point(356.00, 403.00, 0.00));
    points.add(new Point(407.11, 408.00, 0.03));
    points.add(new Point(458.62, 408.00, 0.04));
    points.add(new Point(510.14, 408.00, 0.05));
    points.add(new Point(561.64, 408.24, 0.06));
    points.add(new Point(591.81, 416.64, 0.15));
    points.add(new Point(549.77, 446.33, 0.17));
    points.add(new Point(508.60, 477.29, 0.18));
    points.add(new Point(468.26, 509.29, 0.19));
    points.add(new Point(427.52, 540.78, 0.20));
    points.add(new Point(386.79, 572.21, 0.21));
    points.add(new Point(349.38, 606.00, 0.26));
    points.add(new Point(381.58, 634.58, 0.37));
    points.add(new Point(423.65, 663.73, 0.38));
    points.add(new Point(472.29, 680.26, 0.40));
    points.add(new Point(523.44, 684.00, 0.41));
    points.add(new Point(574.95, 684.00, 0.42));
    points.add(new Point(626.12, 679.56, 0.42));
    points.add(new Point(676.07, 667.19, 0.42));
    points.add(new Point(724.58, 650.21, 0.44));
    points.add(new Point(770.31, 626.51, 0.44));
    points.add(new Point(809.01, 593.09, 0.45));
    points.add(new Point(832.27, 547.83, 0.47));
    points.add(new Point(835.00, 496.49, 0.48));
    points.add(new Point(833.64, 445.00, 0.49));
    points.add(new Point(826.31, 394.11, 0.50));
    points.add(new Point(811.97, 344.72, 0.52));
    points.add(new Point(790.54, 297.94, 0.53));
    points.add(new Point(759.81, 256.77, 0.54));
    points.add(new Point(724.40, 219.40, 0.56));
    points.add(new Point(686.94, 184.11, 0.58));
    points.add(new Point(643.52, 156.51, 0.59));
    points.add(new Point(596.84, 134.95, 0.60));
    points.add(new Point(546.94, 122.41, 0.61));
    points.add(new Point(495.69, 117.60, 0.62));
    points.add(new Point(444.19, 117.00, 0.64));
    points.add(new Point(392.92, 120.01, 0.65));
    points.add(new Point(342.95, 132.02, 0.66));
    points.add(new Point(294.48, 149.26, 0.68));
    points.add(new Point(248.66, 172.72, 0.70));
    points.add(new Point(204.57, 199.22, 0.71));
    points.add(new Point(163.75, 230.53, 0.73));
    points.add(new Point(124.94, 264.32, 0.75));
    points.add(new Point(92.53, 304.20, 0.76));
    points.add(new Point(64.42, 347.36, 0.78));
    points.add(new Point(41.43, 393.44, 0.79));
    points.add(new Point(21.56, 440.88, 0.80));
    points.add(new Point(3.68, 489.18, 0.82));
    points.add(new Point(-3.95, 539.85, 0.84));
    points.add(new Point(-0.07, 591.06, 0.86));
    points.add(new Point(15.96, 639.75, 0.87));
    points.add(new Point(43.03, 683.38, 0.89));
    points.add(new Point(81.84, 717.10, 0.90));
    points.add(new Point(126.72, 742.36, 0.92));
    points.add(new Point(173.32, 764.28, 0.93));
    points.add(new Point(222.03, 780.90, 0.94));
    points.add(new Point(272.42, 791.10, 0.94));
    points.add(new Point(323.93, 792.00, 0.95));
    points.add(new Point(375.44, 792.00, 0.97));
    points.add(new Point(426.95, 791.39, 0.97));
    points.add(new Point(478.16, 786.09, 0.98));
    points.add(new Point(529.25, 779.49, 0.99));
    points.add(new Point(580.36, 773.03, 0.99));
    points.add(new Point(631.00, 764.00, 1.00));

    return points;
  }
  
  ArrayList<Point> getFastPauseFastFastTemplatePoints(){
    ArrayList<Point> points = new ArrayList<Point>();
    points.add(new Point(117.00, 562.00, 0.00));
    points.add(new Point(137.13, 562.00, 0.03));
    points.add(new Point(157.27, 562.00, 0.03));
    points.add(new Point(177.40, 562.00, 0.03));
    points.add(new Point(197.54, 562.00, 0.04));
    points.add(new Point(217.67, 562.00, 0.05));
    points.add(new Point(237.81, 562.00, 0.05));
    points.add(new Point(257.94, 562.00, 0.05));
    points.add(new Point(278.08, 562.00, 0.06));
    points.add(new Point(298.21, 562.00, 0.06));
    points.add(new Point(318.35, 562.00, 0.06));
    points.add(new Point(338.48, 562.00, 0.07));
    points.add(new Point(358.61, 562.00, 0.08));
    points.add(new Point(378.75, 562.00, 0.08));
    points.add(new Point(398.88, 562.00, 0.09));
    points.add(new Point(419.02, 562.00, 0.09));
    points.add(new Point(439.15, 562.00, 0.09));
    points.add(new Point(459.29, 562.00, 0.09));
    points.add(new Point(479.42, 562.00, 0.10));
    points.add(new Point(499.56, 562.00, 0.11));
    points.add(new Point(519.69, 562.00, 0.11));
    points.add(new Point(539.83, 562.00, 0.12));
    points.add(new Point(559.96, 562.00, 0.12));
    points.add(new Point(580.06, 562.92, 0.14));
    points.add(new Point(600.07, 565.00, 0.15));
    points.add(new Point(610.75, 554.49, 0.68));
    points.add(new Point(617.77, 535.62, 0.69));
    points.add(new Point(624.52, 516.67, 0.70));
    points.add(new Point(630.10, 497.33, 0.71));
    points.add(new Point(635.71, 477.99, 0.72));
    points.add(new Point(641.75, 458.78, 0.72));
    points.add(new Point(647.31, 439.43, 0.73));
    points.add(new Point(653.57, 420.30, 0.73));
    points.add(new Point(658.16, 400.70, 0.75));
    points.add(new Point(663.58, 381.31, 0.75));
    points.add(new Point(668.78, 361.87, 0.76));
    points.add(new Point(675.01, 342.76, 0.76));
    points.add(new Point(682.20, 323.96, 0.76));
    points.add(new Point(689.08, 305.03, 0.76));
    points.add(new Point(697.12, 286.61, 0.78));
    points.add(new Point(704.02, 267.75, 0.78));
    points.add(new Point(712.77, 249.62, 0.79));
    points.add(new Point(723.11, 232.38, 0.81));
    points.add(new Point(736.04, 227.59, 0.85));
    points.add(new Point(740.81, 247.05, 0.86));
    points.add(new Point(743.64, 266.97, 0.87));
    points.add(new Point(747.56, 286.70, 0.88));
    points.add(new Point(750.91, 306.54, 0.88));
    points.add(new Point(755.91, 326.04, 0.89));
    points.add(new Point(760.89, 345.55, 0.90));
    points.add(new Point(765.69, 365.11, 0.91));
    points.add(new Point(770.06, 384.76, 0.91));
    points.add(new Point(774.28, 404.45, 0.91));
    points.add(new Point(778.55, 424.12, 0.91));
    points.add(new Point(783.60, 443.61, 0.92));
    points.add(new Point(789.00, 463.01, 0.93));
    points.add(new Point(794.78, 482.29, 0.93));
    points.add(new Point(800.89, 501.48, 0.94));
    points.add(new Point(807.45, 520.51, 0.94));
    points.add(new Point(814.92, 539.20, 0.95));
    points.add(new Point(822.66, 557.79, 0.95));
    points.add(new Point(830.68, 576.26, 0.96));
    points.add(new Point(840.26, 593.96, 0.97));
    points.add(new Point(854.00, 608.00, 1.00));
    return points;
  }

  ArrayList<Point> getFastFastPauseFastTemplatePoints(){
    ArrayList<Point> points = new ArrayList<Point>();
    points.add(new Point(147.00, 368.00, 0.00));
    points.add(new Point(156.43, 385.93, 0.03));
    points.add(new Point(164.38, 404.55, 0.04));
    points.add(new Point(169.29, 424.18, 0.05));
    points.add(new Point(174.47, 443.76, 0.05));
    points.add(new Point(180.68, 463.05, 0.07));
    points.add(new Point(188.02, 481.92, 0.08));
    points.add(new Point(195.88, 500.60, 0.09));
    points.add(new Point(204.80, 518.77, 0.09));
    points.add(new Point(214.34, 536.64, 0.11));
    points.add(new Point(223.65, 554.63, 0.11));
    points.add(new Point(231.52, 573.30, 0.12));
    points.add(new Point(239.90, 591.71, 0.13));
    points.add(new Point(247.54, 610.43, 0.15));
    points.add(new Point(257.02, 628.23, 0.17));
    points.add(new Point(269.10, 624.23, 0.21));
    points.add(new Point(278.40, 606.28, 0.23));
    points.add(new Point(288.24, 588.56, 0.24));
    points.add(new Point(298.01, 570.81, 0.24));
    points.add(new Point(307.72, 553.02, 0.24));
    points.add(new Point(317.22, 535.13, 0.25));
    points.add(new Point(327.07, 517.43, 0.27));
    points.add(new Point(337.20, 499.89, 0.28));
    points.add(new Point(346.77, 482.02, 0.28));
    points.add(new Point(356.25, 464.12, 0.29));
    points.add(new Point(365.66, 446.17, 0.30));
    points.add(new Point(375.05, 428.21, 0.30));
    points.add(new Point(384.42, 410.25, 0.30));
    points.add(new Point(393.71, 392.24, 0.31));
    points.add(new Point(403.11, 374.29, 0.32));
    points.add(new Point(413.49, 356.91, 0.33));
    points.add(new Point(421.00, 358.22, 0.41));
    points.add(new Point(431.48, 364.00, 0.70));
    points.add(new Point(451.74, 364.00, 0.72));
    points.add(new Point(472.01, 364.00, 0.74));
    points.add(new Point(492.27, 364.00, 0.74));
    points.add(new Point(512.53, 364.00, 0.77));
    points.add(new Point(532.79, 364.00, 0.78));
    points.add(new Point(553.06, 364.00, 0.78));
    points.add(new Point(573.32, 364.00, 0.79));
    points.add(new Point(593.58, 364.00, 0.79));
    points.add(new Point(613.83, 364.88, 0.80));
    points.add(new Point(634.07, 365.82, 0.81));
    points.add(new Point(654.32, 366.00, 0.83));
    points.add(new Point(674.58, 366.36, 0.83));
    points.add(new Point(694.84, 366.76, 0.83));
    points.add(new Point(715.09, 367.45, 0.83));
    points.add(new Point(735.34, 368.00, 0.85));
    points.add(new Point(755.60, 368.00, 0.86));
    points.add(new Point(775.86, 368.19, 0.86));
    points.add(new Point(796.12, 368.69, 0.87));
    points.add(new Point(816.36, 369.55, 0.88));
    points.add(new Point(836.56, 371.07, 0.89));
    points.add(new Point(856.79, 372.29, 0.90));
    points.add(new Point(877.04, 373.00, 0.90));
    points.add(new Point(897.30, 373.05, 0.90));
    points.add(new Point(917.55, 373.52, 0.91));
    points.add(new Point(937.81, 374.00, 0.91));
    points.add(new Point(958.07, 374.59, 0.92));
    points.add(new Point(978.32, 375.00, 0.93));
    points.add(new Point(998.59, 375.00, 0.94));
    points.add(new Point(1018.85, 375.00, 0.96));
    points.add(new Point(1039.06, 375.90, 0.98));
    points.add(new Point(1059.00, 378.00, 1.00));

    return points;
  }

  ArrayList<Point> getStableTemplatePoints(){
  
    ArrayList<Point> points = new ArrayList<Point>();
    points.add(new Point(83.00, 735.00, 0.00));
    points.add(new Point(83.73, 719.10, 0.04));
    points.add(new Point(84.00, 703.14, 0.07));
    points.add(new Point(86.44, 687.38, 0.10));
    points.add(new Point(89.62, 671.77, 0.12));
    points.add(new Point(94.45, 656.62, 0.15));
    points.add(new Point(102.14, 642.86, 0.18));
    points.add(new Point(112.92, 631.08, 0.18));
    points.add(new Point(125.71, 621.58, 0.20));
    points.add(new Point(138.86, 612.55, 0.23));
    points.add(new Point(151.13, 602.32, 0.24));
    points.add(new Point(163.62, 592.54, 0.26));
    points.add(new Point(177.07, 583.94, 0.28));
    points.add(new Point(190.41, 575.22, 0.30));
    points.add(new Point(204.79, 568.29, 0.32));
    points.add(new Point(219.89, 563.12, 0.33));
    points.add(new Point(235.55, 560.00, 0.33));
    points.add(new Point(251.54, 560.00, 0.35));
    points.add(new Point(267.53, 560.00, 0.35));
    points.add(new Point(283.52, 560.00, 0.37));
    points.add(new Point(299.51, 560.00, 0.39));
    points.add(new Point(315.50, 560.00, 0.40));
    points.add(new Point(331.49, 560.00, 0.41));
    points.add(new Point(347.48, 560.00, 0.41));
    points.add(new Point(363.47, 560.00, 0.43));
    points.add(new Point(379.46, 560.00, 0.44));
    points.add(new Point(395.45, 560.00, 0.45));
    points.add(new Point(411.44, 560.00, 0.47));
    points.add(new Point(427.43, 560.00, 0.48));
    points.add(new Point(443.41, 559.44, 0.49));
    points.add(new Point(459.38, 558.97, 0.51));
    points.add(new Point(475.22, 557.03, 0.51));
    points.add(new Point(490.77, 553.31, 0.52));
    points.add(new Point(506.28, 549.43, 0.54));
    points.add(new Point(521.76, 545.41, 0.55));
    points.add(new Point(537.09, 540.98, 0.56));
    points.add(new Point(552.42, 536.53, 0.57));
    points.add(new Point(567.67, 531.71, 0.59));
    points.add(new Point(582.41, 525.53, 0.59));
    points.add(new Point(597.27, 519.70, 0.61));
    points.add(new Point(612.10, 513.73, 0.61));
    points.add(new Point(626.85, 507.57, 0.63));
    points.add(new Point(641.16, 500.42, 0.64));
    points.add(new Point(654.83, 492.22, 0.65));
    points.add(new Point(667.67, 482.71, 0.67));
    points.add(new Point(680.12, 472.68, 0.68));
    points.add(new Point(691.09, 461.09, 0.69));
    points.add(new Point(701.79, 449.21, 0.71));
    points.add(new Point(712.54, 437.44, 0.73));
    points.add(new Point(722.35, 424.81, 0.74));
    points.add(new Point(730.74, 411.21, 0.76));
    points.add(new Point(738.79, 397.43, 0.78));
    points.add(new Point(743.57, 382.30, 0.78));
    points.add(new Point(745.80, 366.61, 0.82));
    points.add(new Point(751.15, 351.54, 0.83));
    points.add(new Point(755.94, 336.38, 0.86));
    points.add(new Point(761.25, 321.38, 0.87));
    points.add(new Point(765.18, 305.89, 0.89));
    points.add(new Point(768.65, 290.28, 0.90));
    points.add(new Point(772.46, 274.76, 0.91));
    points.add(new Point(780.02, 260.97, 0.93));
    points.add(new Point(790.11, 248.58, 0.96));
    points.add(new Point(800.52, 236.48, 0.98));
    points.add(new Point(809.00, 223.00, 1.00));
    return points;
  }

  ArrayList<Point> getSpeedupTemplatePoints(){
    ArrayList<Point> points = new ArrayList<Point>();
    points.add(new Point(157.00, 512.00, 0.00));
    points.add(new Point(165.51, 489.98, 0.02));
    points.add(new Point(186.56, 482.00, 0.06));
    points.add(new Point(207.17, 491.34, 0.09));
    points.add(new Point(222.25, 509.25, 0.11));
    points.add(new Point(236.62, 527.62, 0.14));
    points.add(new Point(256.87, 524.27, 0.19));
    points.add(new Point(269.52, 504.43, 0.21));
    points.add(new Point(278.87, 483.13, 0.23));
    points.add(new Point(298.34, 475.00, 0.28));
    points.add(new Point(318.08, 486.08, 0.31));
    points.add(new Point(332.32, 504.32, 0.34));
    points.add(new Point(340.28, 525.42, 0.37));
    points.add(new Point(358.37, 538.00, 0.41));
    points.add(new Point(377.22, 527.04, 0.43));
    points.add(new Point(391.85, 508.15, 0.45));
    points.add(new Point(402.87, 487.21, 0.46));
    points.add(new Point(414.08, 466.39, 0.47));
    points.add(new Point(426.69, 446.31, 0.49));
    points.add(new Point(445.64, 433.12, 0.52));
    points.add(new Point(466.18, 439.46, 0.54));
    points.add(new Point(475.41, 461.49, 0.55));
    points.add(new Point(482.55, 484.31, 0.56));
    points.add(new Point(486.50, 508.00, 0.57));
    points.add(new Point(490.18, 531.54, 0.58));
    points.add(new Point(496.12, 554.70, 0.59));
    points.add(new Point(500.11, 578.11, 0.61));
    points.add(new Point(512.80, 560.41, 0.64));
    points.add(new Point(522.44, 538.45, 0.64));
    points.add(new Point(532.21, 516.51, 0.65));
    points.add(new Point(542.57, 494.86, 0.65));
    points.add(new Point(553.09, 473.28, 0.66));
    points.add(new Point(564.03, 451.93, 0.66));
    points.add(new Point(573.53, 429.87, 0.66));
    points.add(new Point(582.55, 407.62, 0.67));
    points.add(new Point(592.26, 385.65, 0.67));
    points.add(new Point(603.18, 364.28, 0.67));
    points.add(new Point(613.47, 342.58, 0.68));
    points.add(new Point(622.87, 339.17, 0.73));
    points.add(new Point(632.49, 361.13, 0.74));
    points.add(new Point(640.70, 383.63, 0.75));
    points.add(new Point(648.14, 406.38, 0.75));
    points.add(new Point(654.63, 429.44, 0.76));
    points.add(new Point(659.58, 452.92, 0.76));
    points.add(new Point(663.88, 476.52, 0.77));
    points.add(new Point(669.23, 499.91, 0.78));
    points.add(new Point(676.40, 522.77, 0.79));
    points.add(new Point(683.33, 545.66, 0.80));
    points.add(new Point(691.00, 568.33, 0.81));
    points.add(new Point(696.00, 583.01, 0.87));
    points.add(new Point(699.34, 559.30, 0.88));
    points.add(new Point(703.28, 535.61, 0.88));
    points.add(new Point(708.53, 512.19, 0.88));
    points.add(new Point(714.48, 488.93, 0.88));
    points.add(new Point(718.75, 465.32, 0.88));
    points.add(new Point(722.44, 441.59, 0.88));
    points.add(new Point(726.69, 417.95, 0.88));
    points.add(new Point(731.21, 394.37, 0.89));
    points.add(new Point(736.29, 370.90, 0.89));
    points.add(new Point(742.02, 347.58, 0.89));
    points.add(new Point(746.15, 323.93, 0.89));
    points.add(new Point(747.00, 299.98, 0.90));
    points.add(new Point(748.00, 276.02, 0.91));
    points.add(new Point(746.00, 258.00, 1.00));
    return points;
  }
  
  ArrayList<Point> getSlowdownTemplatePoints(){
    ArrayList<Point> points = new ArrayList<Point>();
    points.add(new Point(119.00, 498.00, 0.00));
    points.add(new Point(119.00, 471.62, 0.01));
    points.add(new Point(121.54, 445.36, 0.01));
    points.add(new Point(124.26, 419.12, 0.01));
    points.add(new Point(127.23, 392.90, 0.02));
    points.add(new Point(129.86, 366.65, 0.02));
    points.add(new Point(133.00, 340.48, 0.02));
    points.add(new Point(137.04, 314.40, 0.03));
    points.add(new Point(141.55, 288.41, 0.03));
    points.add(new Point(147.30, 262.66, 0.04));
    points.add(new Point(153.37, 237.26, 0.06));
    points.add(new Point(172.54, 249.54, 0.09));
    points.add(new Point(188.70, 270.26, 0.10));
    points.add(new Point(203.23, 292.26, 0.10));
    points.add(new Point(217.59, 314.39, 0.11));
    points.add(new Point(230.07, 337.62, 0.11));
    points.add(new Point(242.65, 360.79, 0.12));
    points.add(new Point(253.66, 384.77, 0.12));
    points.add(new Point(264.67, 408.75, 0.13));
    points.add(new Point(275.38, 432.86, 0.13));
    points.add(new Point(286.00, 457.01, 0.13));
    points.add(new Point(296.35, 481.28, 0.13));
    points.add(new Point(306.55, 505.61, 0.14));
    points.add(new Point(318.07, 529.32, 0.15));
    points.add(new Point(329.80, 552.69, 0.16));
    points.add(new Point(342.37, 535.23, 0.19));
    points.add(new Point(351.15, 510.35, 0.19));
    points.add(new Point(359.38, 485.28, 0.20));
    points.add(new Point(366.33, 459.90, 0.20));
    points.add(new Point(371.56, 434.05, 0.21));
    points.add(new Point(376.75, 408.18, 0.21));
    points.add(new Point(381.16, 382.17, 0.22));
    points.add(new Point(385.11, 356.09, 0.22));
    points.add(new Point(389.04, 330.00, 0.22));
    points.add(new Point(392.12, 303.80, 0.22));
    points.add(new Point(394.09, 277.50, 0.23));
    points.add(new Point(395.00, 251.14, 0.23));
    points.add(new Point(397.00, 224.85, 0.24));
    points.add(new Point(401.00, 206.22, 0.28));
    points.add(new Point(410.07, 230.65, 0.30));
    points.add(new Point(421.58, 254.31, 0.30));
    points.add(new Point(431.84, 278.53, 0.31));
    points.add(new Point(441.37, 303.11, 0.32));
    points.add(new Point(449.82, 328.11, 0.32));
    points.add(new Point(458.38, 353.06, 0.33));
    points.add(new Point(466.72, 378.08, 0.33));
    points.add(new Point(474.71, 403.12, 0.34));
    points.add(new Point(485.09, 427.28, 0.36));
    points.add(new Point(505.79, 439.00, 0.39));
    points.add(new Point(529.13, 428.73, 0.42));
    points.add(new Point(542.93, 406.50, 0.43));
    points.add(new Point(553.77, 382.46, 0.44));
    points.add(new Point(565.95, 359.11, 0.45));
    points.add(new Point(579.21, 338.00, 0.49));
    points.add(new Point(605.02, 342.01, 0.52));
    points.add(new Point(621.00, 361.22, 0.55));
    points.add(new Point(626.74, 386.47, 0.59));
    points.add(new Point(641.06, 406.03, 0.62));
    points.add(new Point(666.41, 405.59, 0.65));
    points.add(new Point(681.19, 384.71, 0.69));
    points.add(new Point(699.80, 370.00, 0.73));
    points.add(new Point(720.00, 376.95, 0.77));
    points.add(new Point(717.97, 402.00, 0.85));
    points.add(new Point(726.00, 405.00, 1.00));
    return points;
  }

  ArrayList<Point> getSquareTemplatePoints(){
    ArrayList<Point> points = new ArrayList<Point>();
    points.add(new Point(285.00, 372.00, 0.00));
    points.add(new Point(285.73, 388.80, 0.02));
    points.add(new Point(288.21, 405.44, 0.02));
    points.add(new Point(290.29, 422.14, 0.03));
    points.add(new Point(291.81, 438.91, 0.03));
    points.add(new Point(293.39, 455.68, 0.04));
    points.add(new Point(294.00, 472.50, 0.05));
    points.add(new Point(294.00, 489.35, 0.05));
    points.add(new Point(294.00, 506.19, 0.06));
    points.add(new Point(294.00, 523.04, 0.07));
    points.add(new Point(294.00, 539.88, 0.08));
    points.add(new Point(294.00, 556.73, 0.09));
    points.add(new Point(294.00, 573.58, 0.10));
    points.add(new Point(294.00, 590.42, 0.12));
    points.add(new Point(292.00, 606.87, 0.14));
    points.add(new Point(304.68, 610.55, 0.25));
    points.add(new Point(321.42, 609.07, 0.26));
    points.add(new Point(338.26, 609.00, 0.27));
    points.add(new Point(355.09, 609.26, 0.27));
    points.add(new Point(371.89, 610.56, 0.27));
    points.add(new Point(388.61, 612.52, 0.28));
    points.add(new Point(405.30, 614.77, 0.29));
    points.add(new Point(421.84, 617.97, 0.29));
    points.add(new Point(438.51, 620.42, 0.30));
    points.add(new Point(455.14, 623.10, 0.30));
    points.add(new Point(471.74, 625.95, 0.31));
    points.add(new Point(488.37, 628.42, 0.31));
    points.add(new Point(505.05, 630.72, 0.32));
    points.add(new Point(521.80, 632.00, 0.33));
    points.add(new Point(538.60, 631.48, 0.34));
    points.add(new Point(555.11, 629.00, 0.36));
    points.add(new Point(563.58, 618.92, 0.45));
    points.add(new Point(563.02, 602.16, 0.46));
    points.add(new Point(560.30, 585.56, 0.47));
    points.add(new Point(557.43, 569.00, 0.48));
    points.add(new Point(556.00, 552.25, 0.49));
    points.add(new Point(555.00, 535.46, 0.50));
    points.add(new Point(555.00, 518.62, 0.51));
    points.add(new Point(555.00, 501.77, 0.51));
    points.add(new Point(554.25, 484.97, 0.52));
    points.add(new Point(552.00, 468.29, 0.53));
    points.add(new Point(551.00, 451.52, 0.54));
    points.add(new Point(551.00, 434.68, 0.56));
    points.add(new Point(550.00, 417.92, 0.57));
    points.add(new Point(548.64, 401.19, 0.59));
    points.add(new Point(548.00, 384.41, 0.60));
    points.add(new Point(548.00, 367.56, 0.62));
    points.add(new Point(541.08, 356.00, 0.73));
    points.add(new Point(524.70, 354.00, 0.75));
    points.add(new Point(507.91, 354.73, 0.76));
    points.add(new Point(491.20, 356.85, 0.77));
    points.add(new Point(474.46, 358.73, 0.78));
    points.add(new Point(457.68, 360.00, 0.79));
    points.add(new Point(440.84, 360.00, 0.80));
    points.add(new Point(424.05, 361.00, 0.81));
    points.add(new Point(407.20, 361.00, 0.81));
    points.add(new Point(390.36, 361.00, 0.82));
    points.add(new Point(373.58, 360.00, 0.83));
    points.add(new Point(356.74, 360.00, 0.85));
    points.add(new Point(339.89, 360.00, 0.87));
    points.add(new Point(323.07, 360.23, 0.89));
    points.add(new Point(306.97, 365.01, 0.91));
    points.add(new Point(290.85, 369.00, 0.94));
    points.add(new Point(274.00, 369.00, 1.00));

    return points;
  }

}
